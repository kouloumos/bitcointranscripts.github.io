<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Olaoluwa Osuntokun on ₿itcoin Transcripts</title><link>https://www.kouloumos.com/bitcointranscripts.github.io/speakers/olaoluwa-osuntokun/</link><description>Recent content in Olaoluwa Osuntokun on ₿itcoin Transcripts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 30 Jan 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://www.kouloumos.com/bitcointranscripts.github.io/speakers/olaoluwa-osuntokun/index.xml" rel="self" type="application/rss+xml"/><item><title>Hardening Lightning</title><link>https://www.kouloumos.com/bitcointranscripts.github.io/blockchain-protocol-analysis-security-engineering/2018/hardening-lightning/</link><pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate><guid>https://www.kouloumos.com/bitcointranscripts.github.io/blockchain-protocol-analysis-security-engineering/2018/hardening-lightning/</guid><description>Hardening lightning network
Olaoluwa Osuntokun (roasbeef), Lightning Labs
https://twitter.com/kanzure/status/959155562134102016
video: https://www.youtube.com/watch?v=V3f4yYVCxpk
slides: https://docs.google.com/presentation/d/14NuX5LTDSmmfYbAn0NupuXnXpfoZE0nXsG7CjzPXdlA/edit
previous talk (2017): http://diyhpl.us/wiki/transcripts/blockchain-protocol-analysis-security-engineering/2017/lightning-network-security-analysis/
previous slides (2017): https://cyber.stanford.edu/sites/default/files/olaoluwaosuntokun.pdf
Introduction I am basically going to go over some ways that I&amp;rsquo;ve been thinking about basically hardening lightning network, in terms of making security better and making the client more scalable itself, and then I&amp;rsquo;ll talk about some issues and pain points that come up when you&amp;rsquo;re doing fees on mainnet.</description></item><item><title>Lightning Network Security Analysis</title><link>https://www.kouloumos.com/bitcointranscripts.github.io/blockchain-protocol-analysis-security-engineering/2017/lightning-network-security-analysis/</link><pubDate>Fri, 03 Feb 2017 00:00:00 +0000</pubDate><guid>https://www.kouloumos.com/bitcointranscripts.github.io/blockchain-protocol-analysis-security-engineering/2017/lightning-network-security-analysis/</guid><description>Security analysis of the lightning network https://twitter.com/kanzure/status/957978915515092992
video: https://www.youtube.com/watch?v=Eq_eY8iWrKI
slides: https://cyber.stanford.edu/sites/default/files/olaoluwaosuntokun.pdf
Introduction My name is Laolu Osuntokun and I work on lightning stuff. I go by roasbeef on the internet. I work at Lightning Labs. I am going to be giving an overview of some security properties and privacy properties of lightning.
State of the hash-lock Before I start, I want to go over the state of the hash-lock which is the current progress to completion and design of lightning.</description></item><item><title>Bitcoin Script</title><link>https://www.kouloumos.com/bitcointranscripts.github.io/scalingbitcoin/tokyo-2018/bitcoin-script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.kouloumos.com/bitcointranscripts.github.io/scalingbitcoin/tokyo-2018/bitcoin-script/</guid><description>Featuring roasbeef
Agenda opcodes OP_CHECKSIGFROMSTACK sighash flags keytree sigs MAST graftroot, taproot covenants, reverse covenants (input restrictions: this input has to be spent with tihs other input, or can only be spent if this other one doesn&amp;rsquo;t exist) stack manipulation script languages (simplicity) tx formats, serialization? what would we change with hard-fork changes to the transaction format? Segwit transaction encoding format sucks; the witnesses are at the end and inline with all the scriptsigs and that should be changed.</description></item><item><title>Bitcoin Script V2.0 And Strengthened Payment Channels</title><link>https://www.kouloumos.com/bitcointranscripts.github.io/scalingbitcoin/stanford-2017/bitcoin-script-v2.0-and-strengthened-payment-channels/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.kouloumos.com/bitcointranscripts.github.io/scalingbitcoin/stanford-2017/bitcoin-script-v2.0-and-strengthened-payment-channels/</guid><description>Bitcoin script v2.0 roasbeef
jl2012
This is a brief history of bitcoin script evolution. Since bitcoin was active in 2009, there was a lot of emergency fixes for the first 2 years done by Satoshi. He found that people could skpi the signature check using OP_RETURN and malformed scriptSigs. So those functions were removed. OP_VER and OP_VERIF were intended for script upgrades but it was found that after every release of bitcoin, it would become a hard-fork because of the design.</description></item><item><title>Flare Routing In Lightning</title><link>https://www.kouloumos.com/bitcointranscripts.github.io/scalingbitcoin/milan-2016/flare-routing-in-lightning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.kouloumos.com/bitcointranscripts.github.io/scalingbitcoin/milan-2016/flare-routing-in-lightning/</guid><description>Flare: An approach to routing in lightning network https://twitter.com/kanzure/status/784745976170999810
I will not be as technical as Olaoluwa was. You have nodes that open up payment channels. This scheme is actually developed at the moment in great detail. So how do you find the channels through which to send payments? So we wanted to propose some initial solution to this.
Routing requirements It should be source routing because we need the privacy.</description></item><item><title>Lightning Network Security Panel</title><link>https://www.kouloumos.com/bitcointranscripts.github.io/breaking-bitcoin/2019/lightning-network-security-panel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.kouloumos.com/bitcointranscripts.github.io/breaking-bitcoin/2019/lightning-network-security-panel/</guid><description>Lightning network security panel https://twitter.com/kanzure/status/1137758233865703424
Introduction MF: I will start by thanking Kevin and Lea and the organizers. It&amp;rsquo;s been an awesome event. Thanks also to the sponsors. Without their assistance we couldn&amp;rsquo;t have had the event. I&amp;rsquo;d also like to make some plugs before we start the conversation. One, I run the London Bitcoin developers group. If you&amp;rsquo;re ever in London or interested in speaking, please look up London Bitcoin Devs on Twitter or Meetup.</description></item><item><title>Multi Party Channels In The Utxo Model Challenges And Opportunities</title><link>https://www.kouloumos.com/bitcointranscripts.github.io/scalingbitcoin/tokyo-2018/multi-party-channels-in-the-utxo-model-challenges-and-opportunities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.kouloumos.com/bitcointranscripts.github.io/scalingbitcoin/tokyo-2018/multi-party-channels-in-the-utxo-model-challenges-and-opportunities/</guid><description>Multi-party channels in the UTXO model: Challenges and opportunities
Olaoluwa Osuntokun (Lightning Labs) (roasbeef)
https://twitter.com/kanzure/status/1048468663089618944
Introductions Hi. So my name is Laolu. I am also known as roasbeef and I am co-founder of Lightning Labs. I am going to go over some cool research and science fiction. In the actual implementation for these things and cool to discuss and get some discussions around this. first I am going to talk about single-party channels and multi-party channels.</description></item><item><title>Onion Routing In Lightning</title><link>https://www.kouloumos.com/bitcointranscripts.github.io/scalingbitcoin/milan-2016/onion-routing-in-lightning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.kouloumos.com/bitcointranscripts.github.io/scalingbitcoin/milan-2016/onion-routing-in-lightning/</guid><description>Onion routing in lightning network http://lightning.network/
https://twitter.com/kanzure/status/784742298089299969
video: https://www.youtube.com/watch?v=Gzg_u9gHc5Q#t=2m44s
Privacy-preserving decentralized micropayments
We&amp;rsquo;re excited about lightning because the second layer could be an important opportunity to improve privacy and fungibility. Also, there might be timing information in the payments themselves.
Distributed set of onion routers (OR, cite OG onionrouting paper). Users create circuits with sub-set of nodes. Difficult for oion routers to gain more info than predecessor+successor in path. Low latency - usable within greater internet.</description></item></channel></rss>